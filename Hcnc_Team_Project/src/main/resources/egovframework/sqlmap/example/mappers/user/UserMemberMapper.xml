<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.mapper.UserMemberMapper">
    <select id="selectFindIdByUser" resultType="java.util.Map">
		SELECT MEMBER_ID, LOGIN_TYPE
		FROM MEMBERS
		WHERE EMAIL_ADDR = #{to}
	</select>
     <select id="selectLoginByUser" resultType="java.util.Map">
		SELECT MEMBER_ID, "O" as PASSWORD
		FROM   MEMBERS
		WHERE  MEMBER_ID = #{id}
		  AND  PASSWORD = #{password}
		  AND  STATUS = 'Y'
	</select>
	<select id="selectIdCheckByUser" resultType="int">
		SELECT COUNT(MEMBER_ID) AS COUNT
		FROM MEMBERS
		WHERE MEMBER_ID = #{id}
	</select>
	<select id="selectEmailCheckByUser" resultType="int">
		SELECT COUNT(MEMBER_ID) AS COUNT
		FROM MEMBERS
		WHERE EMAIL_ADDR = #{to}
	</select>
	<select id="selectUserInfoByUser" resultType="java.util.Map">
		SELECT  MEMBER_ID,
		MEMBER_TYPE,
        USER_NAME,
        LOGIN_TYPE,
        EMAIL_ADDR,
        PHONE_NUMBER,
        BIRTH,
        GENDER,
        GRADE_CODE,
        STATUS
		FROM MEMBERS
		WHERE MEMBER_ID = #{id}
	</select>
	<select id="selectMypageShippingInfoByUser" resultType="java.util.Map">
		 SELECT
            O.MEMBER_ID,
            CASE                                                 
                WHEN O.USER_NAME
                IS NULL THEN '비회원'
                ELSE O.USER_NAME
              END AS USER_NAME
            , O.ORDER_COMMENT            
            , P.PAYMENT_STATUS                            
            , CASE
                WHEN S.SHIPMENT_STATUS
                IS NULL THEN '발송대기'
                ELSE S.SHIPMENT_STATUS
              END AS SHIPMENT_STATUS                                 
       FROM ORDERS O
       LEFT JOIN PAYMENTS P ON O.ORDER_ID = P.ORDER_ID                               
       LEFT JOIN SHIPS S ON O.ORDER_ID = S.ORDER_ID                                  
       LEFT JOIN MEMBERS M ON O.PHONE_NUMBER = M.PHONE_NUMBER                        
       LEFT JOIN PROMOTION_LOG PL ON O.ORDER_ID = PL.ORDER_ID                        
       LEFT JOIN PROMOTIONS PS ON PL.PROMOTION_ID = PS.PROMOTION_ID                  
       LEFT JOIN COUPONS C ON O.ORDER_ID = C.ORDER_ID                                
       LEFT JOIN POINTS PT ON O.ORDER_ID = PT.ORDER_ID AND PT.CHANGE_TYPE = '사용'    
       WHERE 1=1
         AND O.MEMBER_ID = #{id}
	</select>
    <select id="selectCouponListByUser" resultType="java.util.Map">
        SELECT
            COUPON_ID,
            MEMBER_ID,
            COUPON_CODE,
            DISCOUNT_TYPE,
            DISCOUNT_VALUE,
            MIN_ORDER_PRICE,
            ISSUED_DT,
            EXPIRY_DT,
            IS_USED,
            USED_DT,
            COUPON_TYPE,
            ORDER_ID,
            COUPON_NAME,
            PROMOTION_ID
        FROM
            COUPONS
        WHERE
            MEMBER_ID = #{MEMBER_ID}
    </select>
    <select id="selectPointListByUser" resultType="java.util.Map">
        SELECT
            POINT_ID,
            MEMBER_ID,
            CHANGE_TYPE,
            `POINT`,
            DESCRIPTION,
            INPUT_DT,
            ORDER_ID
        FROM    
            POINTS
        WHERE
            MEMBER_ID = #{MEMBER_ID}
    </select>
    <select id="selectTotalPointByUser" resultType="int">
        SELECT IFNULL(SUM(`POINT`), 0) AS total
        FROM POINTS
        WHERE MEMBER_ID = #{MEMBER_ID}
    </select>
    <select id="selectTotalSpendByUser" resultType="int">
        SELECT IFNULL(SUM(FINAL_AMOUNT),0) AS total
        FROM ORDERS
        WHERE MEMBER_ID = #{MEMBER_ID}
    </select>
	<insert id="insertSignUpByUser" parameterType="java.util.Map">
		INSERT INTO
	MEMBERS (
        MEMBER_ID,
        USER_NAME,
        PASSWORD,
        LOGIN_TYPE,
        EMAIL_ADDR,
        PHONE_NUMBER,
        BIRTH,
        GENDER,
        GRADE_CODE,
        FIRST_LOGIN_DT,
        LAST_LOGIN_DT,
        STATUS,
        PRICE_AMOUNT,
        INPUT_DT,
        UPDATE_DT,
        MEMBER_TYPE
		)
	VALUES
	(
        #{id},
		#{name},
        #{password},
        #{loginType},
        #{email},
        #{phone},
        #{birth},
        #{gender},
        1,
        NULL,
        NULL,
        'Y',
        0,
        current_timestamp(),
        NULL,
        'user'
    );
	</insert>
	<update id="updateLastLoginByUser" parameterType="java.util.Map">
        UPDATE MEMBERS
        SET LAST_LOGIN_DT = NOW()
        WHERE MEMBER_ID = #{id} 
    </update>
    <update id="updatePasswordByUser" parameterType="java.util.Map">
        UPDATE MEMBERS
        SET PASSWORD = #{password}
        WHERE MEMBER_ID = #{id} 
    </update>
    <update id="updateMemberByUser" parameterType="java.util.Map">
        UPDATE MEMBERS
        <set>
            <if test="name != null and name != ''">
            USER_NAME = #{name},
            </if>
            <if test="password != null and password != ''">
            PASSWORD = #{password},
            </if>
            <if test="email != null and email != ''">
            EMAIL_ADDR = #{email},
            </if>
            <if test="phone != null and phone != ''">
            PHONE_NUMBER = #{phone},
            </if>
            <if test="birth != null and birth != ''">
            BIRTH = #{birth},
            </if>
            
        </set>
        WHERE MEMBER_ID = #{id}
    </update>
    <update id="updateWithDrawByUser" parameterType="java.util.Map">
     UPDATE MEMBERS
        SET STATUS = 'N'
        WHERE MEMBER_ID = #{id} 
    </update>
</mapper>